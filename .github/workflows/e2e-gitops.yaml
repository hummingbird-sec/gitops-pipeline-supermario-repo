name: "Run SAST, Build and push supermario image, scan image, Update deployment and version files"

on:
  push:
    branches:
      - main

jobs:

  # ① バージョン番号を計算して出力
  set_version:
    runs-on: ubuntu-latest

    outputs:
      version: ${{ steps.set.outputs.version }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set VERSION
        id: set
        run: |
          VERSION=$(($(cat version.txt) + 1))
          echo "VERSION=$VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

  # ② SAST（静的解析）
  sonarqube_sast_scan:
    runs-on: ubuntu-latest
    needs: set_version

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  # ③ Docker イメージをビルドして Push
  build_push_supermario_docker_image:
    runs-on: ubuntu-latest
    needs: [sonarqube_sast_scan, set_version]
    env:
      VERSION: ${{ needs.set_version.outputs.version }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Build and Push Docker Image
        run: |
          docker build -t docker.io/hummingbirddock/supermariogitopsproject:${{ env.VERSION }} .
          docker push docker.io/hummingbirddock/supermariogitopsproject:${{ env.VERSION }}

  # ④ Trivy でイメージスキャン
  run_container_image_scan_on_supermario_docker_image:
    runs-on: ubuntu-latest
    needs: [build_push_supermario_docker_image, set_version]
    env:
      VERSION: ${{ needs.set_version.outputs.version }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Pull and save image
        run: |
          echo "Using VERSION = $VERSION"
          docker pull docker.io/hummingbirddock/supermariogitopsproject:$VERSION
          docker save -o supermariolatestdockerimage.tar docker.io/hummingbirddock/supermariogitopsproject:$VERSION
          ls -lh supermariolatestdockerimage.tar

      - name: Run Trivy vulnerability scanner in tarball mode
        uses: aquasecurity/trivy-action@master
        with:
          input: supermariolatestdockerimage.tar
          exit-code: '0'
          severity: 'CRITICAL,HIGH'

  # ⑤ deployment.yaml と version.txt を更新・push
  update_k8s_yaml_version_file_with_latest_image_tag:
    runs-on: ubuntu-latest
    needs: [run_container_image_scan_on_supermario_docker_image, set_version]
    env:
      VERSION: ${{ needs.set_version.outputs.version }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set Git Config
        run: |
          git config --global user.email "${{ secrets.GIT_EMAIL }}"
          git config --global user.name "${{ secrets.GIT_USERNAME }}"

      - name: Update Deployment YAML
        run: |
          git pull
          sed -i "s|image: hummingbirddock/supermariogitopsproject:.*$|image: hummingbirddock/supermariogitopsproject:$VERSION|" deployment.yaml
          echo $VERSION > version.txt
          git add deployment.yaml version.txt
          git commit -m "Updated deployment yaml and version txt file with supermario image tag to $VERSION"
          git push